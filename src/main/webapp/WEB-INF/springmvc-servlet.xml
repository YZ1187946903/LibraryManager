<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
							http://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context
							http://www.springframework.org/schema/context/spring-context.xsd
							http://www.springframework.org/schema/mvc
							http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<description>Spring MVC 核心配置文件</description>
	<!-- 1、开启 Spring MVC 注解扫描机制  -->
	<mvc:annotation-driven/>
	<!-- 2、配置 Spring MVC 注解扫描基础包位置  -->
	<context:component-scan base-package="cn.ysl.library">
		<!-- (1)对于 Spring MVC 容器需要扫描到 @Controller 和 @ControllerAdvice 两个注解 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<!-- (2)Spring MVC不能扫描 @service 注解：
				@Service 不仅仅能够将一个 Java 类注册到 Spring 容器中，而且能够和 @Transactional 联合使用处理事务。
				但是 Spring MVC 容器并没有任何处理事务的机制，所以不能扫描到 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	<!-- 3、配置 Spring MVC 转发视图解析器  -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- (1)配置转发的前缀和后缀 -->
		<property name="prefix" value="/WEB-INF/view/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	<!-- 4、配置 Spring MVC JSON 视图解析器  -->
	<bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<!-- (1)设置返回 JSON 的数据格式 -->
		<property name="defaultCharset" value="UTF-8"/>
		<property name="supportedMediaTypes">
			<value>application/json;charset=UTF-8</value>
		</property>
	</bean>
	<!-- 5、对于静态资源 Spring MVC 不做任何处理进行放行  -->
	<mvc:default-servlet-handler/>
</beans>